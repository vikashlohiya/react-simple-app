{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/Uppercase.js","reportWebVitals.js","pages/About.js","Main.js","index.js"],"names":["Navbar","props","className","classColor","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","changeTheme","for","Alert","style","height","msg","Uppercase","useState","text","setText","rows","value","onChange","event","target","split","filter","arr","length","toUpperCase","showAlert","toLocaleLowerCase","concateString","forEach","element","charAt","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","About","Main","colorClass","setColorClass","alert","setMessase","setTimeout","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eda7161a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nconst Navbar = (props) => {\n  \n  \n\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.classColor} bg-${props.classColor}`}>\n  <div className=\"container-fluid \">\n    <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/about\">About Us</Link>\n        </li>\n        \n        \n      </ul>\n      <div className=\"form-check form-switch\">\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onClick={props.changeTheme} />\n  <label className=\"form-check-label\" for=\"flexSwitchCheckChecked\">Dark Mode</label>\n</div>\n    </div>\n  </div>\n</nav>)\n};\n\nexport default Navbar;","\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n  \r\n  return (\r\n    <div style={{height:'50px'} } className=\"my-2\" >{\r\n    props.msg && <div className=\"alert alert-success\" role=\"alert\">\r\n  {props.msg}\r\n</div>\r\n}\r\n</div>\r\n  );\r\n}\r\n\r\nexport default Alert;","\r\nimport React,{useState} from 'react'\r\n\r\n\r\n\r\n\r\nfunction Uppercase(props) {\r\n  const [text, setText] = useState('');\r\n  function handleChange(event){\r\n    if(text.length>0){\r\n    setText(text.toUpperCase())\r\n    props.showAlert('Text converted successfully.');\r\n    }\r\n  }\r\n  \r\n  const handeledOnchnage=(event)=>{\r\n        setText(event.target.value)\r\n        \r\n  }\r\n  const handleLower=()=>{\r\n    if(text.length>0){\r\n    setText(text.toLocaleLowerCase())\r\n    props.showAlert('Text converted successfully.');\r\n    }\r\n  }\r\n\r\n  const formatString=()=>{\r\n    if(text.length>0){\r\n     let concateString='';\r\n     let data=text.split(' ');\r\n     data.forEach(element => {\r\n    //  console.log(element)\r\n    concateString += element.charAt(0).toUpperCase()+element.slice(1,element.length).toLocaleLowerCase()+' ';\r\n    setText(concateString)\r\n     });\r\n     \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n    <div className=\"form-group\">\r\n    <h2 for=\"email\">Convert text into upper case:</h2>\r\n    <textarea className=\"form-control my-4\" rows=\"8\" value={text} onChange={handeledOnchnage}></textarea>\r\n     <p><span className='fw-bold'>Total Word Count: </span>{text.split(' ').filter(arr=>arr.length!=0).length}</p>\r\n    <input type=\"button\"  value=\"Convert to Uppercase\" className=\"btn btn-default btn-primary px-5 my-3 mx-2\" onClick={handleChange} />\r\n    <input type=\"button\"  value=\"Convert to Lowercase\" className=\"btn btn-default btn-primary px-5 my-3 mx-2\" onClick={handleLower} />\r\n    <input type=\"button\"  value=\"Capitalize First Letter\" className=\"btn btn-default btn-primary px-5 my-3 mx-2\" onClick={formatString} />\r\n    <input type=\"button\"  value=\"Clear Text\" className=\"btn btn-default btn-primary px-5 my-3\" onClick={()=>{setText('')}} />\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Uppercase;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst About = () => (\n  <div className=\"container\">\n    <h1 className=\"title is-1\">This is the About Page</h1>\n    <p>\n    At Text Utils, we are passionate about simplifying and enhancing your text processing experience. Our mission is to provide powerful yet user-friendly text manipulation tools to help individuals and businesses optimize their text-related tasks efficiently and effortlessly.\n    </p>\n   <h2>What We Offer</h2> \n<p><span className=\"fw-bold\">Text Analysis:</span> Extract valuable insights from your text data, ranging from sentiment analysis to entity recognition.\n</p>\n<p>\n<span className=\"fw-bold\">Formatting Tools:</span> Easily format and structure your text to meet specific requirements and guidelines.\n</p>\n<p>\n<span className=\"fw-bold\">Encoding and Decoding:</span> Convert text to various encodings and decode it back for seamless integration across different platforms.\n</p>\n<p>\n<span className=\"fw-bold\">Word and Character Count:</span> Instantly calculate word and character counts for precise documentation and reporting.\n</p>\n\n<p>\n<span className=\"fw-bold\">\nCase Conversion:</span> Quickly change the case of your text, whether you need it in uppercase, lowercase, or title case.\n</p>\n\n  </div>\n);\n\nexport default About;","import React,{useState} from 'react'\r\n\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navbar  from \"./components/Navbar\";\r\nimport Alert  from \"./components/Alert\";\r\nimport Uppercase  from \"./components/Uppercase\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport About  from \"./pages/About\";\r\n\r\n\r\nfunction Main(props) {\r\n  const [colorClass, setColorClass] = useState('light'); \r\n  const [alert, setMessase] = useState(null); \r\n  const changeTheme=()=>{\r\n   \r\n      if(colorClass==='light'){\r\n        setColorClass('dark');\r\n        showAlert('Dark mode enabled.')\r\n      }else{\r\n        setColorClass('light');\r\n        showAlert('Light mode enabled.')\r\n      }\r\n  }\r\n\r\n  const showAlert=(msg)=>{\r\n    setMessase(msg);\r\n    setTimeout(()=>{\r\n        setMessase(null)\r\n    }\r\n    ,2000);\r\n  }\r\n  return (\r\n    <>\r\n    <Router>\r\n    <Navbar classColor={colorClass} changeTheme={changeTheme}  />\r\n    <Alert msg={alert}/>\r\n      <Switch>       \r\n        <Route exact path=\"/about\" >\r\n          <About />\r\n        </Route>\r\n        <Route exact path=\"/\" >\r\n        <Uppercase showAlert={showAlert}   />\r\n        </Route>\r\n        \r\n      </Switch>\r\n    </Router>\r\n    \r\n     {/* <Uppercase showAlert={showAlert}/> */}\r\n   </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React,{useState ,setState} from 'react';\nimport ReactDOM from 'react-dom';\nimport Navbar  from \"./components/Navbar\";\nimport Alert  from \"./components/Alert\";\nimport Uppercase  from \"./components/Uppercase\";\nimport reportWebVitals from './reportWebVitals';\n\nimport Main  from \"./Main\";\nReactDOM.render(\n  \n  <React.StrictMode>  \n\n    <Main/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}